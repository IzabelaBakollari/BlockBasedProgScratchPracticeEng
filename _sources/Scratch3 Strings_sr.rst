Strings
=======

.. include:: blocks.txt

.. include:: icons.txt

.. infonote::

 |intro10|

У овој лекцији ћемо показати како се променљиве типа стринг могу користити за решавање различитих типова задатака. Уједно ћемо научити како Скреч памти стрингове и функције блокова који се користе за операције са стринговима.

Стринг представља низ карактера који се третирају као јединствени податак. Стрингови имају велику примену у програмирању. Можемо да креирамо програме који комбинују, пореде, сортирају, шифрују и на друге начине обрађују текст. Притом треба имати на уму да се и бројеви могу третирати као стрингови, али у том случају не радимо са вредностима које представљају већ знаковима – цифрама од којих се састоје. 

.. topic:: Операције над стринговима

 Да бисмо боље разумели операције над стринговима, уз сваку ћемо навести резултат који враћа ако се користи над стринговима s1=БАНАНА и s2=АНА. 
  
 У програмским језицима се често користе следеће операције над стринговима:

 - одређивање дужине стринга
      ``дужина s1`` → 6

 - поређење стрингова 
      утврђивање који је пре у алфабетском уређењу

      ``s1<s2 ?`` → false 

      није тачно јер је „БАНАНА“ алфабетски иза „АНА“,

 - повезивање стрингова 
      ``повежи s1 и s2`` →БАНАНААНА,

 - издвајање знака који се налази на задатој позицији
      ``слово 3 од s1`` → Н,

 - садржи?
      провера да ли стринг s1 садржи стринг s2

      ``s2 у s1 ?`` → true 

      тачно јер се „АНА“ садржи у „БАНАНА“,

 - позиција 
      утврђивање прве позиције у стрингу на којој се налази други стринг

      pos(s1,s2): ``позиција s2 у s1`` → 2,

 - копирање 
      прављење новог стринга који се формира од задатог броја знакова d почев од задате позиције p у полазном стрингу

      copy(s,p,d): ``копирај из s1 знакова 4 почев од 3`` → НАНА,

 - брисање 
      измена стринга s1 брисањем задатог броја знакова d почев од задате позиције p у полазном стрингу

      delete(s1,p,d): ``обриши из s1 знакова 3 почев од 4`` → БАНА,

 - уметање 
      измена стринга s1 уметањем стринга s2 у стринг s1 почев од задате позиције p

      insert(s1,s2,p): ``уметни s2 у s1 почев од 3`` → БААНАНАНА.

 Последње четири операције нису уграђене у Скреч, али ћемо у примеру „Стринг операције” показати како их сами можемо реализовати.

  

|study| Study the following examples
------------------------------------

Example 1 - Project „Папагај”
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. level:: 1

Главни лик овог пројекта папагај. Он прво пита корисника како се зове и чека све док корисник не откуца своје име и притисне дирку *Enter* или кликне на знак за чекирање у десном углу поља за одговор.
Затим поздравља корисника по имену, па му каже које је прво слово његовог имена и колико укупно слова има име. Разговор лика и корисника приказан је на следећој слици.  

.. image:: ../_images/10/fig10_1.png
   :width: 450px   
   :align: center

За креирање овог пројекта коришћене су операције помоћу којих смо издвојили прво слово из имена и утврдили колико слова има у имену.

По извршењу наредбе |ask_wait| Скреч памти низ знакова које је корисник унео у простору који се зове |answer|.

На следећој слици приказано је како се памти одговор и помоћу којих операција се из њега издвајају подаци које лик саопштава као излазне податке наредбом ``изговори``.

.. image:: ../_images/10/fig10_2.png
   :width: 600px   
   :align: center

Трећа операција која је употребљена за формирање излазне поруке је |join|.


Скрипта пројекта *Папагај* приказана је на следећој слици. 

.. image:: ../_images/10/fig10_3.png
   :width: 600px   
   :align: center

Следи пројекат у коме се показује како се коришћењем стринг операција могу издвајати 
цифре броја.

.......

Example 2 - Project „Замени цифре”
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. level:: 2

**Сценарио пројекта**

Главни део овог пројекта је скрипта која замењују места цифри јединица и цифри стотина у природном троцифреном броју *x* који се уноси са улаза.

Лик водитељ тражи од корисника да унесе троцифрен број. При том се врши провера да ли је заиста унет троцифрен број.
Ако није, понавља се захтев за улаз све док се заиста не унесе троцифрен број. Затим се издвајају прва и трећа цифра, 
па се прави број *замењен* са замењеним цифрама јединица и стотина. Број се формира помоћу две операције |join|. 
На крају водитељ изговара  изворни број и број са замењеним цифрама јединица и стотина.

Скрипта пројекта приказана је на следећој слици.

.. image:: ../_images/10/fig10_4.png
   :width: 700px   
   :align: center

.......

У наредном пројекту проверава се да ли је унета реч палиндром. *Палиндром* је реч или речиница која исто гласи било да се чита слева удесно или здесна улево. На пример, реч "потоп" је палиндром. Слично се дефинише и број који је палиндром. На пример, број 12321 је палиндром. 

Example 3 - Project „Палиндром”
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. level:: 3

Лик водитељ тражи од корисника да унесе реч. Променљива *d* добија као вредност дужину речи.
Пореде се прво и последње слово речи, друго и претпоследње и тако редом све до средине речи.
Променљива *i*, чија је почетна вредност 0 и повећава се за 1 у оквиру циклуса, омогућава
да се следећом провером изврше ова поређења.

.. image:: ../_images/10/fig10_5.png
   :width: 485px   
   :align: center

Променљивља *p* указује на број провера. Уколико се при некој од провера покаже да одговарајућа слова нису једнака,
реч није палиндром и то се региструје доделом 0 променљивој *pal* (која је на почетку постављена на 1).
После провере свих парова слова исписује се порука да ли је реч палиндром (*pal* = 1 јесте, у супротном није).

Скрипта пројекта *Палиндром* приказана је на следећој слици.

.. image:: ../_images/10/fig10_6.png
   :width: 600px   
   :align: center

.......

Example 4 - Project „Стринг операције”
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

У овом пројекту од корисника се тражи да избере једну од операција: копирање (copy) или брисање (delete). У зависности од тога шта је тражио, захтевају се улазни подаци, па се исписује резултат операције. Задавање операције врши се кликом на одговарајуће дугме, које затим разглашава операцију. Када се прими порука о изабраној операцији, покреће се скрипта која је реализује.
У пројекту учествују два лика: дугме *Copy* за копирање и *Delete* за брисање. 
Скрипта која реализује брисање је нешто једноставнија. На основу унетих вредности за број знакова и позицију од које се узимају формира се нови стринг s2. Он је на почетку празан, а формира се додавањем једног по једног знака из задатог дела полазног стринга.
 
.. image:: ../_images/10/fig10_7.png
   :width: 330px   
   :align: center
   
Скриптe придруженe добијaњу поруке *Copy* приказане су на следећој слици. Уношење података и формирање излазне поруке издвојене су у засебне процедуре. Ове процедуре могу се користити и када се зада захтев *Delete*. 
 
.. image:: ../_images/10/fig10_8.png
   :width: 680px   
   :align: center
   
Скрипта за брисање ради супротно – од делова испред и иза означених знакова формира нови стринг. Опет се започиње од празног стринга. Прво му се допишу знакови из дела испред, а затим се на њих надовежу знакови из дела иза. 
 


|ask| Did you understand?
-------------------------

Question 1
~~~~~~~~~~

.. level:: 1

.. mchoice:: стринг1
   :answer_a: да
   :answer_b: не
   :correct: a
   :feedback_a:  
   :feedback_b: 
   
    Да ли стринг може садржати знакове аритметичких операција?


Question 2
~~~~~~~~~~

.. level:: 1

.. mchoice:: стринг2
   :answer_a: Л
   :answer_b: Е
   :answer_c: Н
   :answer_d: А
   :correct: b
   :feedback_a: To je слово 1.
   :feedback_b: 
   :feedback_c: То је слово 3.
   :feedback_d: То је слово 4.
   
   Шта ће бити резултат операције ``слово 2 од ЛЕНА``?

Question 3
~~~~~~~~~~

.. level:: 1

.. image:: ../_images/10/q10_3.png
   :width: 680px   
   :align: center

.. mchoice:: стринг3
   :answer_a: да
   :answer_b: не
   :correct: a
   :feedback_a:  
   :feedback_b: 
   
    Да ли ће стринг изговорити исто при извршавању наредби А и В?


   
Question 4
~~~~~~~~~~

.. level:: 1

.. mchoice:: стринг4
   :answer_a: Л
   :answer_b: ЛЕНА
   :answer_c: 4
   :answer_d: дужина ЛЕНА
   :correct: c
   :feedback_a: То би се добило коришћењем операције слово од.
   :feedback_b: 
   :feedback_c: 
   :feedback_d: То би се добило повезивањем ове две речи.
   
   Шта ће бити резултат операције ``дужина ЛЕНА``?

Question 5
~~~~~~~~~~

.. level:: 1

.. mchoice:: стринг5
   :answer_a: БАНА
   :answer_b: БАНАНА
   :answer_c: НАБАНА
   :answer_d: НАНАБА
   :correct: b
   :feedback_a: 
   :feedback_b: 
   :feedback_c: 
   :feedback_d: 
   
   Шта ће бити резултат операције ``повежи БА и НАНА``? 


Question 6
~~~~~~~~~~

.. image:: ../_images/10/q10_6.png
   :width: 680px   
   :align: center


.. dragndrop:: стринг6
    :feedback: Покушај поново
    :match_1: A|||A
    :match_2: B|||ништа не враћа
    :match_3: C|||1
    :match_4: D|||7
       
    Превлачењем упари наредбе са вредностима које ће вратити.     
   

|try| Try it!
-------------

Exercise 1
~~~~~~~~~~
.. level:: 2

.. infonote::

  Састави програм којим се од датог природног броја n формира број са истим цифрама, али у обрнутом поретку.

.......      

Exercise 2
~~~~~~~~~~
.. level:: 2

.. infonote::

  Напиши програм који за дати природан број n (1<= n <1000) одређује збир цифара и број цифара. На пример:
 
  - n =12 збир цифара је 3, број цифра је 2; 

  - n =102 збир цифара је 3, број цифра је 3.  

.......

Exercise 3
~~~~~~~~~~

.. level:: 3

.. infonote::

  Напиши програм који у листу уписује све троцифрене Армстронгове бројеве. Број је Армстронгов ако је једнак збиру кубова својих цифара.

    
|book| Summary
--------------

У овој лекцији упознали смо се са типом података стринг и најчешћим операцијама које се врше над подацима овог типа. Кроз примере пројеката смо показали како се променљиве типа стринг могу користити за решавање различитих типова задатака и како се користе операције за рад са стринговима уграђене у Скреч.

**New concepts**: стринг, палиндром.

**Strach commands**: |operator_blocks| - |text_contains|, |letter|, |length_text|.


|project| Create a projects
---------------------------

Project 1 - „Шифровање”
~~~~~~~~~~~~~~~~~~~~~~~~

.. level:: 3

Састави пројекат који шифрује или дешифрује улазни текст на следећи начин. 

У листи "оригинал" чува се 26 слова абецеде редом. У листи "шифра" чува се свих 26 слова у неком редоследу 
другачијем од редоследа у листи "оригинал". Да би се теже провалила шифра, на месту где се у једној листи 
налази самогласник, и у другој листи треба да се налази самогласник.
Корисник уноси текст, који пројекат треба да шифрује или дешифрује у зависности да ли је корисник кликнуо на дугме "шифруј" или "дешифруј".

На пример, ако листе "оригинал" и "шифра" имају редом следеће садржаје:

= = = = = = = = = = = = = = = = = = = = = = = = = = 

A B C D E F G H I J K L M N O P Q R S T U V W X Y Z

V U B G D Q X Y Z E Ј К L O М N А W P R S Т F H C I

= = = = = = = = = = = = = = = = = = = = = = = = = = 

и корисник унесе текст МАСКА, програм треба да га шифрује у LVBJV. 

Ако је пак улазни текст МАСКА требало дешифровати, програм треба да га претвори у ОQYLQ.

Project 2 - „Наопака”
~~~~~~~~~~~~~~~~~~~~~~

.. level:: 3

Састави пројекат у коме се од корисника тражи да унесе колико речи жели да трансформише (n), а потом у циклусу који се понавља
n пута учитава име, уписује га у листу "имена", па га трансформише у стринг који се добије када се име чита здесна улево и уписује 
га у листу "наопака".

На пример, ако је корисник унео n=3 и затим унео имена: ЛЕНА, МАРИО, КАТАРИНА; листа "наопака треба да садржи:
АНЕЛ, ОИРАМ и АНИРАТАК.

Project 3 - „Бројеви”
~~~~~~~~~~~~~~~~~~~~~~

.. level:: 3

Састави пројекат који уписује у листу све троцифрене бројевe који имају особину да су дељиви бројем који се добија избацивањем средње цифре.

